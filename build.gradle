buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.9.0"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'jacoco'
    id 'com.github.dawnwords.jacoco.badge' version '0.1.0'
    id 'application'
    id 'java-library'
}
apply plugin: "io.ratpack.ratpack-java"

group = 'io.easeci.core'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'domain')
    implementation fileTree(include: ['*.jar'], dir: 'io-lib')
    implementation project(':domain')
    implementation project(':io-lib')

    implementation 'org.apache.groovy:groovy-all:4.0.8'

    implementation 'io.ratpack:ratpack-core:1.9.0'
    implementation group: 'io.ratpack', name: 'ratpack-rx', version: '1.9.0'
    implementation 'org.asynchttpclient:async-http-client:2.12.1'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation group: 'io.vavr', name: 'vavr', version: '0.10.2'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.javatuples:javatuples:1.2'
    implementation "io.reactivex.rxjava3:rxjava:3.0.2"
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.9.0.202009080501-r'

    implementation group: 'org.zeroturnaround', name: 'zt-exec', version: '1.12'

    implementation 'org.slf4j:slf4j-log4j12:2.0.3'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.1.4.Final'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testImplementation 'org.mockito:mockito-core:3.3.3'

    testRuntimeOnly('org.junit.platform:junit-platform-launcher:1.6.1')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.1')
    testRuntimeOnly('org.junit.vintage:junit-vintage-engine:5.6.1')
}

mainClassName = 'io.easeci.EaseciCoreApplication'

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    def mainClassName = 'io.easeci.EaseciCoreApplication'
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Main-Class': "${mainClassName}"
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

afterEvaluate {
    tasks.getByName("jar") {
        dependsOn(":domain:build")
        dependsOn(":io-lib:build")
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    maxParallelForks = 1
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport

jacocoBadgeGenSetting {
    jacocoReportPath "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
    readmePath "$projectDir/README.md"
}