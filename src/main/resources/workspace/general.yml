output:
  autopublishing: false
  queue:
    max-size: 100
  consumer:
    max-size: 15
  pipeline-context:
    buffer-max-size: 50
    file-save-interval: 5
    clt: 120 # (seconds) Context Live Time - inform how much time Pipeline Context is alive as idling object
    liveness-check-interval: 15 # (seconds) - how often cron will check liveness of context

# Global settings of EaseRunner, if in the Pipeline it is not specified parameters,
# default will be taken
runner:
  default:
    output-method: terminal
    logs-persister: None

log:
  logfilePath:
  logSavingStrategy: EACH

# Section of client connections
connection:
  # This value bellow defines how many clients can be connected to this one Master node.
  max-by-host: 10

execution:
  thread-pool-execution: 1

# Here we can define some values of scheduling mechanism.
# Scheduling means to delegate some pipeline to some Worker Node
schedule:
  # All ran pipelines when there is no idling Worker Node, are catching and storing on special queue before run on Worker Node
  queue:
    # Defines how many threads should be taken for searching for idling Worker Node
    thread-pool-execution: 1
    # Defines how many seconds it will take to run thread after application startup
    refresh-init-delay-seconds: 5
    # Defines intervals between next execution of searching for Worker Node ready to work
    refresh-interval-seconds: 10

# In this properties section we can define values of actions in communication with whole easeci cluster
cluster:
  # Here bellow we can find information about our Master Node.
  # We can change this information but some of them has a crucial
  # impact for application flow
  master-node:
    # Node name describe name, some sort of label
    # We can change it for anything we want
    node-name: "easeci-core-master"
    # This is important in debug, issues etc.
    # Developers should know which version user uses
    application-version: "v0.0.1-dev"
    # Some random nodeUuid, we use it in application,
    # but we change it for anything we want
    node-uuid: "ccd90032-6456-11ed-81ce-0242ac120002"
    # This is crucial property and should not be changed in most cases.
    # It determines which version of API will use Master with worker nodes.
    api-version: "v1"
    # Similar as above, we need to describe which version of API we are using now.
    api-version-prefix: "/api/v1"
    # Defines what protocol Master nodes accepts, HTTP in default
    transfer-protocol: "HTTP"
    # Here we need to configure domain name or IP with port of our master node.
    # This is required for communication (callbacks or web socket for logging) from worker nodes to master
    domain-name: "localhost"
    # Worker Nodes will communicate to master node via ip, ip with port or domain name.
    # Possible values: DOMAIN, IP, IP_WITH_PORT
    communication-type: "DOMAIN"
    # Optional parameter it is required when communication-type is IP, IP_WITH_PORT
    # Defines IP address of easeci-core master node
    ip: "localhost"
    # Optional parameter it is required when communication-type is IP, IP_WITH_PORT, DOMAIN_WITH_PORT
    # Defines IP_WITH_PORT address of easeci-core master node
    port: "9000"

  worker-node:
    # Defines how many threads should be taken for refreshing state
    # of each connected Worker Node
    thread-pool-execution: 1
    # Defines when Scheduler should start refreshing logic after application startup
    # For default it is 0 because we want to check our worker nodes immediately after EaseCI Master startup.
    refresh-init-delay-seconds: 0
    # Defines interval for request to each created connections.
    # Notice that mechanism will refresh state of all existing node connections
    refresh-interval-seconds: 60
    # This parameter determines the maximum number of attempts to connect to the worker node.
    refresh-max-retry-attempts: 10